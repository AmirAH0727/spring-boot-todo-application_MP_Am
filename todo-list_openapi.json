openapi: 3.0.0
info:
  version: "1.0"
  title: To-do List
  contact:
    name:
    url:
    email:
  license:
    name: Apache 2.0
paths:
  "/todos/{todo-id}":
    parameters:
      - name: todo-id
        in: path
        required: true
        description: The todo identifier.
        schema:
          type: integer
    get:
      operationId: getTodo
      summary: Get Todo
      tags:
        - Todos
      responses:
        "200":
          description: Todo found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/todo-full"
              examples:
                response:
                  value:
                    id: 1
                    title: clean fridge
                    description: It's a mess
                    dueDate: 2018-08-27T12:34:56.789Z
                    done: false
        "404":
          description: Todo not found.
      description: Request an existing todo.
    put:
      operationId: updateTodo
      summary: Update Todo
      tags:
        - Todos
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/todo-base"
        description: The modified todo.
      responses:
        "204":
          description: Todo updated.
        "400":
          description: Invalid modified todo.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/error-response"
              examples:
                response:
                  value:
                    - code: TITLE_NULL
                      message: title must not be null
                    - code: TITLE_SIZE
                      message: title size must be between 1 and 30
                    - code: DESCRIPTION_SIZE
                      message: description size must be between 0 and 500
                    - code: DUEDATE_NULL
                      message: dueDate must not be null
                    - code: DUEDATE_PATTERN
                      message: dueDate pattern must match "yyyy-MM-ddTHH:mm:ssZ"
        "404":
          description: Todo not found.
      description: Update an existing todo.
    delete:
      operationId: deleteTodo
      summary: Delete Todo
      tags:
        - Todos
      responses:
        "204":
          description: Todo deleted.
        "404":
          description: Todo not found.
      description: Delete an existing todo.
  /todos:
    post:
      operationId: createTodo
      summary: Create Todo
      tags:
        - Todos
      responses:
        "201":
          description: Todo created.
          headers:
            ETag:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/todo-full"
              examples:
                response:
                  value:
                    id: 1
                    title: clean fridge
                    description: It's a mess
                    dueDate: 2018-08-27T12:34:56.789Z
                    done: false
        "400":
          description: Invalid new todo.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/error-response"
              examples:
                response:
                  value:
                    - code: TITLE_NULL
                      message: title must not be null
                    - code: TITLE_SIZE
                      message: title size must be between 1 and 30
                    - code: DESCRIPTION_SIZE
                      message: description size must be between 0 and 500
                    - code: DUEDATE_NULL
                      message: dueDate must not be null
                    - code: DUEDATE_PATTERN
                      message: dueDate pattern must match "yyyy-MM-ddTHH:mm:ssZ"
      description: Create a new todo.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/todo-base"
        description: The new todo.
    get:
      operationId: getTodos
      summary: List todos
      tags:
        - Todos
      parameters:
        - in: query
          name: state
          description: Filters all or unfinished todos in the response
          schema:
            type: string
            enum:
              - all
              - unfinished
            default: unfinished
        - in: query
          name: limit
          description: Maximal number of todos in the response
          schema:
            type: integer
            minimum: 0
            maximum: 10
            default: 5
        - in: query
          name: offset
          description: Offset for the todos in the response
          schema:
            type: integer
            minimum: 0
            maximum: 100
      responses:
        "200":
          description: List of todos.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/todo-list"
              examples:
                response:
                  value:
                    - id: 1
                      title: clean fridge
                      dueDate: 2018-08-27T12:34:56.789Z
                      done: false
                    - id: 2
                      title: clean bathrom
                      dueDate: 2018-08-28T09:00:00.000Z
                      done: false
                    - id: 3
                      title: bring out garbage
                      dueDate: 2018-08-29T11:00:00.000Z
                      done: false
                    - id: 4
                      title: go to supermarket
                      dueDate: 2018-08-25T14:30:00.000Z
                      done: true
                    - id: 5
                      title: write user stories
                      dueDate: 2018-09-01T10:00:00.000Z
                      done: false
                    - id: 6
                      title: pay bills
                      dueDate: 2018-09-01T16:00:00.000Z
                      done: false
                    - id: 7
                      title: call mum
                      dueDate: 2018-09-01T19:00:00.000Z
                      done: false
        "204":
          description: Empty list of todos
        "206":
          description: Partial list of todos.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/todo-list"
              examples:
                response:
                  value:
                    - id: 1
                      title: clean fridge
                      dueDate: 2018-08-27T12:34:56.789Z
                      done: false
                    - id: 2
                      title: clean bathrom
                      dueDate: 2018-08-28T09:00:00.000Z
                      done: false
                    - id: 3
                      title: bring out garbage
                      dueDate: 2018-08-29T11:00:00.000Z
                      done: false
                    - id: 4
                      title: go to supermarket
                      dueDate: 2018-08-25T14:30:00.000Z
                      done: true
                    - id: 5
                      title: write user stories
                      dueDate: 2018-09-01T10:00:00.000Z
                      done: false
        "400":
          description: Invalid query params
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/error-response"
              examples:
                response:
                  value:
                    - code: STATE_INVALID
                      message: state must be ALL or UNFINISHED
                    - code: LIMIT_MIN
                      message: limit must be greater or equal to 0
                    - code: LIMIT_MAX
                      message: limit must be less or equal to 10
                    - code: OFFSET_MIN
                      message: offset must be greater or equal to 0
                    - code: OFFSET_MAX
                      message: offset must be less or equal to 100
      description: Get a list of todos.
tags:
  - name: Todos
servers:
  - url: http://localhost:8080
components:
  responses:
    "500":
      description: ""
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error-response"
          examples:
            response:
              value:
                code: ERROR_CODE
                message: An internal error occured
  schemas:
    todo-full:
      title: Full Todo
      allOf:
        - $ref: "#/components/schemas/todo-base"
        - type: object
          properties:
            id:
              type: integer
              minimum: 0
              maximum: 1000000
          required:
            - id
      description: The full todo with identifier used as response object.
    todo-base:
      title: Base Todo
      type: object
      description: A base todo used for creation and modification.
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 30
        description:
          type: string
          maxLength: 500
        dueDate:
          type: string
          format: date-time
        done:
          type: boolean
      required:
        - title
        - dueDate
        - done
    error-response:
      type: object
      title: Error Response
      description: Error Response
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string
    todo-list:
      type: object
      title: List Todo
      description: A reduced todo with identifier used as response object for the todo list.
      properties:
        id:
          type: integer
        title:
          type: string
        dueDate:
          type: string
          format: date-time
        done:
          type: boolean
      required:
        - id
        - title
        - dueDate
        - done